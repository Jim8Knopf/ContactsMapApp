<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/app/src/androidTest/java/com/example/myapplication/ExampleInstrumentedTest.kt;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp/app/src/main/java/com/example/contactsmapapp/ui/theme/Color.kt;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp/app/src/main/java/com/example/contactsmapapp/ui/theme/Shape.kt;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp/app/src/main/java/com/example/contactsmapapp/ui/theme/Theme.kt;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp/app/src/main/java/com/example/contactsmapapp/ui/theme/Type.kt;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp/app/src/main/java/com/example/contactsmapapp/AddContactScreen.kt;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp/app/src/main/java/com/example/contactsmapapp/ContactsListScreen.kt;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp/app/src/main/java/com/example/contactsmapapp/HomeScreen.kt;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp/app/src/main/java/com/example/contactsmapapp/MainActivity.kt;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp/app/src/main/java/com/example/contactsmapapp/MainApplication.kt;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp/app/src/test/java/com/example/myapplication/ExampleUnitTest.kt;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp/app/build.gradle.kts;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp/contacts/src/main/java/com/example/contacts/ContactsManager.kt;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp/map/src/main/java/com/example/map/MapScreen.kt;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp/build.gradle.kts;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp/settings.gradle.kts" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp&quot;:&quot;{\&quot;/app/src/androidTest/java/com/example/myapplication/ExampleInstrumentedTest.kt\&quot;:\&quot;This file contains an instrumented test for an Android application. It does not define any classes or functions, but rather sets up the test environment and performs a single test to ensure that the application\\u0027s context is correct.\\n\\n`ExampleInstrumentedTest`: This is an instrumented test class that runs on an Android device and tests the application\\u0027s context.\\n\\n`useAppContext()`: This test function checks that the application\\u0027s package name matches the expected value.\&quot;,\&quot;/app/src/main/java/com/example/contactsmapapp/AddContactScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`AddContactScreen`: This function provides a UI for adding a new contact to the device\\u0027s contacts list, including input fields for the contact\\u0027s name and phone number, and a button to save the contact.\\n\\nThe file also imports several Android and Jetpack Compose classes and functions, but does not define any additional classes.\&quot;,\&quot;/app/src/main/java/com/example/contactsmapapp/MainApplication.kt\&quot;:\&quot;This file contains a single class:\\n\\n`MainApplication`: This class extends the `Application` class and is annotated with `@HiltAndroidApp`, which is a Dagger Hilt annotation that enables dependency injection for the entire application.\\n\\nThis file sets up the main application class for the \\\&quot;ContactsMapApp\\\&quot; Android application, which is likely the entry point for the application and is responsible for initializing the Dagger Hilt dependency injection framework.\&quot;,\&quot;/app/build.gradle.kts\&quot;:\&quot;This file is a Gradle build script for an Android application. It defines the project\\u0027s configuration, dependencies, and build settings. There are no explicit classes or functions defined in this file. Instead, it uses the Gradle Kotlin DSL to configure the Android build process.\\n\\nThe key elements in this file are:\\n\\n`plugins`: Applies the necessary Android and Kotlin plugins for the project.\\n`android`: Configures the Android-specific settings, such as the application ID, SDK versions, and build types.\\n`compileOptions`: Sets the Java source and target compatibility to Java 11.\\n`kotlinOptions`: Sets the Kotlin JVM target to version 17.\\n`dependencies`: Specifies the dependencies for the project, including Android core libraries, testing frameworks, and the Material Design library.\\n\\nOverall, this file sets up the build environment and dependencies for an Android application written in Kotlin.\&quot;,\&quot;/app/src/main/java/com/example/contactsmapapp/ui/theme/Shape.kt\&quot;:\&quot;This file defines the shape theme for the Contacts Map App using Jetpack Compose.\\n\\n`Shapes`: Defines the rounded corner shapes for the small, medium, and large UI elements in the app.\&quot;,\&quot;/map/src/main/java/com/example/map/MapScreen.kt\&quot;:\&quot;This file contains a Compose-based UI component for displaying a map with a list of contacts.\\n\\n`MapContact`: A data class representing a contact with a name, latitude, and longitude.\\n\\n`MapScreen`: A Composable function that initializes the OSMDroid library, creates a MapView, and adds markers for the provided list of `MapContact` instances.\\n\\nThe file sets up an Android map view using the OSMDroid library and displays a set of contact points on the map. The map is centered and zoomed to a default level, and each contact is represented by a marker on the map.\&quot;,\&quot;/app/src/main/java/com/example/contactsmapapp/ContactsListScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`ContactsListScreen`: This function displays a list of contacts, along with buttons to refresh the contacts and add a new contact.\\n\\nThe file appears to be a part of a larger Contacts Map App, and this specific screen is responsible for rendering the list of contacts and providing user interactions to manage the contacts.\&quot;,\&quot;/app/src/main/java/com/example/contactsmapapp/ui/theme/Type.kt\&quot;:\&quot;This file defines the typography styles for the Compose UI of the \\\&quot;ContactsMapApp\\\&quot; application. It does not contain any classes or functions, but rather sets the default Typography configuration for the app.\\n\\nThe file does the following:\\n\\n1. Imports the `Typography` class from the `androidx.compose.material` package.\\n2. Defines a `Typography` object with the default settings, which can be further customized as needed for the app\\u0027s design.\&quot;,\&quot;/app/src/main/java/com/example/contactsmapapp/HomeScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`HomeScreen`: A Composable function that displays a screen with buttons to request read and write contacts permissions, and a button to navigate to the contacts list screen.\\n\\nThe file appears to be part of a larger Android application that uses the Jetpack Compose UI toolkit. It provides a UI screen that handles the necessary permissions for accessing the device\\u0027s contacts and allows the user to navigate to the contacts list.\&quot;,\&quot;/app/src/test/java/com/example/myapplication/ExampleUnitTest.kt\&quot;:\&quot;This file is a unit test class for the `com.example.myapplication` package. It contains a single test function that checks if the addition of 2 and 2 is correct.\\n\\n`ExampleUnitTest`: A unit test class that contains tests for the application.\\n\\n`addition_isCorrect()`: A test function that checks if the addition of 2 and 2 is equal to 4.\&quot;,\&quot;/build.gradle.kts\&quot;:\&quot;This file is a top-level build file that sets up common configuration options for all sub-projects or modules in the Android application. It does not contain any classes or functions, but rather sets up the necessary plugins for the Android application and Kotlin Android development.\\n\\nThe file does the following:\\n\\n1. Applies the Android application plugin to all sub-projects/modules.\\n2. Applies the Kotlin Android plugin to all sub-projects/modules.\&quot;,\&quot;/app/src/main/java/com/example/contactsmapapp/ui/theme/Theme.kt\&quot;:\&quot;This file defines the theme for the `ContactsMapApp` application using Jetpack Compose.\\n\\n`DarkColorPalette`: A private object that defines the dark color palette for the app\\u0027s theme.\\n\\n`ContactsMapAppTheme`: A composable function that sets the app\\u0027s theme using the `DarkColorPalette`, `Typography`, and `Shapes`.\\n\\nThe file does not contain any classes, but it defines the theme for the `ContactsMapApp` application, including the color palette, typography, and shapes to be used throughout the app.\&quot;,\&quot;/contacts/src/main/java/com/example/contacts/ContactsManager.kt\&quot;:\&quot;This file contains a single object called `ContactsManager` that provides two functions for interacting with the device\\u0027s contacts:\\n\\n`ContactInfo`: A data class that holds the display name and phone number of a contact.\\n\\n`ContactsManager`: An object that provides methods to retrieve contacts from the device and add new contacts to the device\\u0027s contact list.\\n\\n`getDeviceContacts`: Retrieves a list of contacts from the device\\u0027s contact list using the system\\u0027s `ContentResolver`.\\n\\n`addDeviceContact`: Adds a new contact to the device\\u0027s contact list with the given display name and phone number.\&quot;,\&quot;/app/src/main/java/com/example/contactsmapapp/ui/theme/Color.kt\&quot;:\&quot;This file defines the color palette for the `com.example.contactsmapapp.ui.theme` package. It contains four `Color` values that represent different shades of purple and teal, which can be used throughout the application\\u0027s user interface.\\n\\n`Purple200`: A light purple color.\\n`Purple500`: A medium purple color.\\n`Purple700`: A dark purple color.\\n`Teal200`: A light teal color.\&quot;,\&quot;/app/src/main/java/com/example/contactsmapapp/MainActivity.kt\&quot;:\&quot;This file is the main entry point for the \\\&quot;ContactsMapApp\\\&quot; Android application. It defines the main activity, the different screens of the app, and the logic for managing contacts and permissions.\\n\\n`MainActivity`: The main activity of the app, which sets up the UI and the initial state of the app.\\n\\n`AppRoot`: The main composable function that manages the different screens of the app and handles the contacts and permissions logic.\\n\\n`Screen`: An enum that defines the different screens of the app (Home, Contacts List, and Add Contact).\\n\\n`HomeScreen`: Displays the home screen of the app, which allows the user to request read and write permissions for contacts and navigate to the contacts list.\\n\\n`ContactsListScreen`: Displays the list of contacts and allows the user to refresh the list and add a new contact.\\n\\n`AddContactScreen`: Allows the user to add a new contact to the device\\u0027s contacts list.\\n\\n`ContactsManager`: A utility class that provides methods for fetching and managing the device\\u0027s contacts.\&quot;,\&quot;/settings.gradle.kts\&quot;:\&quot;This file is a Gradle build configuration file for an Android application. It does not contain any classes or functions, but rather defines the project structure, plugin management, and dependency resolution settings for the application.\\n\\n`pluginManagement`: Configures the repositories to be used for resolving Gradle plugins, including the Google, Maven Central, and Gradle Plugin Portal repositories.\\n\\n`dependencyResolutionManagement`: Configures the repositories to be used for resolving project dependencies, including the Google and Maven Central repositories. It also sets the repositories mode to fail on project repositories, which means that the build will fail if any project-specific repositories are defined.\\n\\n`rootProject.name`: Sets the name of the root project to \\\&quot;My Application\\\&quot;.\\n\\n`include(\\\&quot;:app\\\&quot;)`: Includes the \\\&quot;:app\\\&quot; module as part of the project.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;/home/jim/Projects/AndroidStudioProjects/ContactsMapApp&quot;:&quot;{\&quot;/app/src/androidTest/java/com/example/myapplication/ExampleInstrumentedTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/androidTest/java/com/example/myapplication/ExampleInstrumentedTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleInstrumentedTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/contactsmapapp/ui/theme/Color.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/contactsmapapp/ui/theme/Color.kt\&quot;,\&quot;file_name\&quot;:\&quot;Color.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/contactsmapapp/ui/theme/Shape.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/contactsmapapp/ui/theme/Shape.kt\&quot;,\&quot;file_name\&quot;:\&quot;Shape.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/contactsmapapp/ui/theme/Theme.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/contactsmapapp/ui/theme/Theme.kt\&quot;,\&quot;file_name\&quot;:\&quot;Theme.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/contactsmapapp/ui/theme/Type.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/contactsmapapp/ui/theme/Type.kt\&quot;,\&quot;file_name\&quot;:\&quot;Type.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/contactsmapapp/AddContactScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/contactsmapapp/AddContactScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;AddContactScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/contactsmapapp/ContactsListScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/contactsmapapp/ContactsListScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;ContactsListScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/contactsmapapp/HomeScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/contactsmapapp/HomeScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;HomeScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/contactsmapapp/MainActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/contactsmapapp/MainActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;MainActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/contactsmapapp/MainApplication.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/contactsmapapp/MainApplication.kt\&quot;,\&quot;file_name\&quot;:\&quot;MainApplication.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/test/java/com/example/myapplication/ExampleUnitTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/test/java/com/example/myapplication/ExampleUnitTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleUnitTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/contacts/src/main/java/com/example/contacts/ContactsManager.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/contacts/src/main/java/com/example/contacts/ContactsManager.kt\&quot;,\&quot;file_name\&quot;:\&quot;ContactsManager.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/map/src/main/java/com/example/map/MapScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/map/src/main/java/com/example/map/MapScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;MapScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/settings.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/settings.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;settings.gradle.kts\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>